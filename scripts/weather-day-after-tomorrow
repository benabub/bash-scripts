#!/usr/bin/env python3

import os
import requests
import sys
from datetime import datetime, timedelta
from time import sleep


def get_day_after_weather():
    try:
        api_key = os.environ.get('OWM_API_KEY')
        city = os.environ.get('OWM_CITY')

        if not api_key or not city:
            raise ValueError("API credentials not configured")

        day_after = (datetime.now() + timedelta(days=2)).strftime('%Y-%m-%d')
        url = (
            "http://api.openweathermap.org/data/2.5/"
            f"forecast?q={city}&appid={api_key}&units=metric"
        )

        retries = 3
        timeout = 30

        for attempt in range(retries):
            try:
                response = requests.get(url, timeout=timeout)
                response.raise_for_status()

                forecasts = response.json()['list']

                # Try to get noon forecast first
                for forecast in forecasts:
                    if (forecast['dt_txt'].startswith(day_after) and
                            '12:00:00' in forecast['dt_txt']):
                        return f"{round(forecast['main']['temp']):+d}"

                # Fallback to any matching forecast
                for forecast in forecasts:
                    if forecast['dt_txt'].startswith(day_after):
                        return f"{round(forecast['main']['temp']):+d}"

                raise ValueError("No forecast data available")

            except requests.exceptions.Timeout:
                if attempt < retries - 1:
                    sleep(5)
                    continue
                raise

    except Exception as e:
        print(f"Error: {e}", file=sys.stderr)
        return "E"


if __name__ == "__main__":
    print(get_day_after_weather())
